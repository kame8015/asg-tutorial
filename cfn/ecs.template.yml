AWSTemplateFormatVersion: 2010-09-09
Description: Cluster, CapacityProvider, and TaskDefinition

Parameters:
  Service:
    Description: Service Name
    Type: String
    Default: tst
    AllowedValues:
      - tst
  AccountType:
    Description: Account Type
    Type: String
    Default: dva
    AllowedValues:
      - dva
      - pda
  ImageName:
    Description: Container Image Name
    Type: String
    Default: sample_python

Resources:
  # ECS Cluster
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub ${Service}-${AccountType}-cluster
      CapacityProviders:
        - !Ref ECSCapacityProvider
      Tags:
        - Key: Owner
          Value: !Ref Service

  # CapacityProvider
  ECSCapacityProvider:
    Type: AWS::ECS::CapacityProvider
    Properties:
      AutoScalingGroupProvider:
        AutoScalingGroupArn:
          Fn::ImportValue: !Sub ${Service}-${AccountType}-asg
        ManagedScaling:
          # InstanceWarmupPeriod: 300 # default
          # MaximumScalingStepSize: 10000 # default
          # MinimumScalingStepSize: 1 # default
          Status: ENABLED
          TargetCapacity: 100
        # ManagedTerminationProtection: ENABLED
    
  # ECS LogGroup
  ECSLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /ecs/logs/${Service}-${AccountType}-ecs-group

  # ECS TaskDefinition
  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family:  sample-python-definition-demo
      # ExecutionRoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/ecsTaskExecutionRole
      ExecutionRoleArn: !Ref EcsTaskExecutionRole
      # TaskRoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/ecsTaskRoleSample # 要修正
      TaskRoleArn: !Ref EcsTaskRole
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - EC2
      ContainerDefinitions:
        - Name: !Ref ImageName
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ImageName}:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ECSLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          MemoryReservation: 128
          # PortMappings:
          #   - HostPort: 80
          #     Protocol: tcp
          #     ContainerPort: 80

  EcsTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Provides ECS Instance with Task Execution
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
      # Path: !Sub /${Service}/
      Path: /
      RoleName: !Sub ${Service}-${AccountType}-ecsTaskExecutionRole
      Tags:
        - Key: Owner
          Value: !Ref Service

  EcsTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
      RoleName: !Sub ${Service}-${AccountType}-ecsTaskRole
      Tags:
        - Key: Owner
          Value: !Ref Service
  
  EcsTaskRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${Service}-${AccountType}-task-role-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              # - s3:List*
              # - s3:Get*
              # - s3:Put*
              - "s3:*"
              - "sts:*"
            Resource: "*"
      Roles:
        - !Ref EcsTaskRole